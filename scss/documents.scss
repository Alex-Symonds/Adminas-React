@use "variables" as v;

/* Document_Builder and Document_Main formatting
    Contents:
        || documentPage
        || iconTextButtons
        || Warnings / Notifications
        || Section: General
        || Section: Special Instructions
        || Section: Line Items
        || Modal: Issue Document
        || Text formatting
        || Responsive Layout
*/

// || SCSS vars
$breakpoint_oneOrTwoColumns: 950px;
$breakpoint_itemContentsOnOneLine: 550px;


// || documentPage
.documentPage{
    --paddingSubSectionHeadings: #{v.px-to-rem(7)} #{v.px-to-rem(8)};

    &_layout{
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: auto auto auto auto;
        grid-template-areas:
            "controls"
            "general"
            "special"
            "lineItems"
        ;
        row-gap: v.px-to-rem(16);
        column-gap: v.px-to-rem(32);
        justify-content: stretch;
        width: 40rem;
        max-width: calc(100vw - var(--mainContentSideMargins) - 1rem);
    }

    &_controlsAndWarningsWrapper{
        grid-area: controls;

        display: flex;
        flex-direction: column;
        gap: v.px-to-rem(6);
    }

    &_controls{
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    &_safeButtonsContainer{
        display: flex;
        justify-content: start;
        align-items: center;
        gap: v.px-to-rem(16);

        padding: v.px-to-rem(6) 0;
    }
}


// || iconTextButtons
@mixin iconTextButton{
/*
    Requirement for use:
        * Include a CSS variable name "--bgSize", which is <= 30px and makes the icon look nice
        * Include @mixin iconTextButton_text on a child element containing the text to go underneath

    Why --bgSize?
    The controls bar looks wrong/messy if all the icons are displayed at the same size.
    This is partly about some SVGs not going right up to all four edges and partly about an 
    optical illusion where circles of diameter N look smaller than squares of height N (it's a 
    thing: fonts are designed with it in mind).

    To get the icons to "look right", they must be displayed at slightly different sizes. The plan:
        * --iconMaxHeight is used to leave space for the icon
        * Each icon-specific class using this mixin will set --bgSize
        * The Y offset will be calculated as per --bgPosY below

    Why --bgPosY instead of just having that equation inside background-size?
    When there's a gradient BG on hover, it's necessary to redeclare all the background-X properties 
    to include settings for both the icon AND the gradient. --bgPosY is used in those.
*/
    --iconMaxHeight: #{v.px-to-rem(30)}; // This is also used in a child mixin
    --bgPosY: calc((var(--iconMaxHeight) - var(--bgSize)) / 2); // Read the comment before getting ideas about refactoring this.

    // reset
    text-decoration: none;
    border: none;

    // The rest
    display: flex;
    justify-content: center;
    align-items: center;

    width: v.px-to-rem(42);
    padding: 0;

    background-color: transparent;
    background-repeat: no-repeat;
    background-size: var(--bgSize, #{v.px-to-rem(24)}) var(--bgSize, #{v.px-to-rem(24)});
    background-position: center var(--bgPosY);

    border-radius: v.px-to-rem(2);

    color: v.$c_tone-100;
    &:enabled:hover{
        color: white;
        background-color: v.$c_tone-700;
    }

    // The "button" might actually be an anchor, in which case there will be a "-disabled" CSS class
    &:disabled,
    &-disabled{
        opacity: 0.4;
        font-style: italic;
        cursor: default;
        pointer-events: none;
    }

    &:focus{
        @include v.focusOutline();
    }
}

@mixin iconTextButton_text{
    // Use with @mixin iconTextButton: sets up the text underneath nicely
    padding: var(--iconMaxHeight) v.px-to-rem(4) v.px-to-rem(4);
    font-size: v.px-to-rem(11);
}

// Optional addition: when the button is an anchor, use this to override the anchor hover formatting
@mixin iconTextButtonOverrideAnchorHover{
    color: white;
    background-color: v.$c_tone-700;
}

// Button-specific details
.closeIconTextButton{
    --bgSize: #{v.px-to-rem(24)};

    @include iconTextButton();
    background-image: url(../images/i-x-hollow.svg);

    &:hover{
        @include iconTextButtonOverrideAnchorHover();
    }

    &_text{
        @include iconTextButton_text();
    }
}

.deleteIconTextButton{
    --bgSize: #{v.px-to-rem(24)};

    @include iconTextButton();
    background-image: url(../images/i-minus-empty.svg);

    &:enabled:hover{
        color: white;
        background: url(../images/i-minus-filled.svg), v.$g_warning_hover;
        background-repeat: no-repeat, no-repeat;
        background-position: center var(--bgPosY), 0 0;
        background-size: var(--bgSize) var(--bgSize), 100% 100%;
    }

    &_text{
        @include iconTextButton_text();
    }
}

.editIconTextButton{
    --bgSize: #{v.px-to-rem(22)};

    @include iconTextButton();
    background-image: url(../images/i-edit.svg);

    &:hover{
        @include iconTextButtonOverrideAnchorHover();
    }

    &_text{
        @include iconTextButton_text();
    }
}

.issueFinalIconTextButton{
    --bgSize: #{v.px-to-rem(22)};

    @include iconTextButton();
    background-image: url(../images/i-check-hollow.svg);

    &_text{
        @include iconTextButton_text();
    }
}

.previewIconTextButton{
    --bgSize: #{v.px-to-rem(22)};

    @include iconTextButton();
    background-image: url(../images/i-preview-hollow.svg);

    &:hover{
        @include iconTextButtonOverrideAnchorHover();
    }

    &_text{
        @include iconTextButton_text();
    }
}

.saveIconTextButton{
    --bgSize: #{v.px-to-rem(20)};

    @include iconTextButton();
    background-image: url(../images/i-save.svg);

    &_text{
        @include iconTextButton_text();
    }
}

.replaceIconTextButton{
    --bgSize: #{v.px-to-rem(24)};

    @include iconTextButton();
    background-image: url(../images/i-replace.svg);

    &_text{
        @include iconTextButton_text();
    }
}

.revertIconTextButton{
    --bgSize: #{v.px-to-rem(24)};

    @include iconTextButton();
    background-image: url(../images/i-revert.svg);

    &_text{
        @include iconTextButton_text();
    }
}

.viewFinalIconTextButton{
    --bgSize: #{v.px-to-rem(24)};

    @include iconTextButton();
    background-image: url(../images/i-view-doc.svg);

    &:hover{
        @include iconTextButtonOverrideAnchorHover();
    }

    &_text{
        @include iconTextButton_text();
    }
}


// || Warnings / Notifications
.documentPageWarnings{
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: start;
    gap: v.px-to-rem(10);

    &_unsavedChanges{
        height: v.px-to-rem(32);
        &-on{
            @include v.notification(v.$c_attention);

            display: flex;
            justify-content: start;
            align-items: center;
            gap: v.px-to-rem(8);
        }
    }

    &_invalid{
        @include v.notification(v.$c_warning);

        display: flex;
        flex-direction: column;
        gap: v.px-to-rem(8);

        h4{
            display: flex;
            align-items: center;
            justify-content: start;
            gap: v.px-to-rem(7);

            font-size: v.px-to-rem(16);
        }
    }

    &_isDeleted{
        height: v.px-to-rem(32);

        @include v.notification(v.$c_warning);

        display: flex;
        justify-content: start;
        align-items: center;
        gap: v.px-to-rem(8);

    }
}


.documentResponseMessage{
    display: grid;
    grid-template-columns: auto auto;
    grid-template-rows: auto auto;
    grid-template-areas: 
        "main close"
        "timestamp close"
    ;
    align-items: start;
    justify-content: start;

    width: fit-content;
    max-width: 100%;

    &-error{
        @include v.notification(v.$c_warning);
    }

    &-neutral{
        @include v.notification(v.$c_accent-600);
    }

    &_content{
        grid-area: main;
    }

    &_timestamp{
        grid-area: timestamp;
        margin: v.px-to-rem(3) 0 0;
        font-size: v.px-to-rem(12);
        color: v.$c_tone-400;
        font-style: italic;
    }

    &_closeBtn{
        grid-area: close;
        justify-self: end;

        position: relative;
        left: v.px-to-rem(10);
    }
}


// || Section: General
.documentPageGeneral{
    grid-area: general;

    max-width: 100%;

    &_headingContent{
        display: block;
        padding: var(--paddingSubSectionHeadings);
    }

    &_formRow{
        display: flex;
        flex-direction: column;
        align-items: start;
        row-gap: v.px-to-rem(2);

        padding: v.px-to-rem(6) v.px-to-rem(12) v.px-to-rem(10);
    
        border-color: v.$c_tone-500;
    
        label{
            margin: 0;
        }
    }

    &_readonlyRow{
        --spaceToLeft: calc(#{v.px-to-rem(5)} + 6px);

        border-bottom: 1px solid v.$c_tone-800;
        padding: 0.25rem 0;
    
        display: flex;
        flex-flow: row wrap;
        align-items: center;
    }

    &_readonlyRowContent{
        padding: 0 0 0 var(--spaceToLeft);
    }

    &_readonlyRowLabel{
        display: inline-block;
        min-width: 8rem;
        width: 100%;
        max-width: 100%;

        padding: 0 0 0 var(--spaceToLeft);

        color: v.$c_tone-200;

        @media screen and (min-width: $breakpoint_oneOrTwoColumns){
            max-width: 8rem;
        }
    }

    &_inputAndNoteWrapper{
        display: flex;
        align-items: center;
        column-gap: v.px-to-rem(3);
    }
}


// || Section: Special Instructions
.documentPageSpecialInstructions{
    --xPadding: #{v.px-to-rem(16)};

    grid-area: special;

    min-width: 270px;
    max-width: 100%;

    &_addButtonContainer{
        padding: 0.3rem;
    }

    &_form{
        --outerXPadding: #{v.px-to-rem(16)};

        padding: v.px-to-rem(16) 0 0;

        display: flex;
        flex-direction: column;
        gap: v.px-to-rem(6);
    }

    &_label{
        padding: 0 var(--outerXPadding);
    }

    &_textarea{
        margin: 0 var(--outerXPadding);
        width: calc(80ch - var(--outerXPadding) * 2);
        max-width: calc(100%  - var(--outerXPadding) * 2);
        height: 8rem;
        max-height: 80svh;
    }

    &_headingContent{
        display: block;
        padding: var(--paddingSubSectionHeadings);
    }

    &_controlsContainer{
        display: flex;
        justify-content: space-between;
        padding: var(--outerXPadding);
    }

    &_button{
        min-height: 2rem;
        width: 8rem;
        max-width: 40%;
    }

    &_specialInstruction{
        &Container{
            position: relative;

            display: flex;
            flex-flow: column nowrap;
            align-items: stretch;
            width: 100%;

            border-bottom: 1px solid v.$c_tone-800;
            padding: v.px-to-rem(4) 0;
        }

        &Contents{
            padding: v.px-to-rem(5) var(--xPadding) 0;
            min-width: 100%;
        }

        &EditBtn{
            position: absolute;
            top: 2px;
            right: 0;

            &:enabled:hover{
                background-position: 5px 4px;
            }
        }

        &WhoAndWhen{
            color: v.$c_tone-400;
            font-style: italic;
            font-size: v.px-to-rem(14);
            min-width: 100%;
            padding: v.px-to-rem(2) var(--xPadding);
        }
    }
    
}


// || Section: Line Items
@mixin docItemSharedWrapper{
    // Make the doc items share the same column widths
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: center;
    gap: 0 1.75rem;

    width: 100%;
    max-width: 100%;
}


@mixin docItemShared{
    border-bottom: 1px solid v.$c_tone-800;

    &-excluded{
        color: v.$c_tone-400;
        font-style: italic;
    }
}


.documentPageItems{
    grid-area: lineItems;
    justify-self: stretch;

    @media screen and (min-width: $breakpoint_oneOrTwoColumns) {
        // Prevent "empty" from looking weirdly mushed up
        min-width: min(25rem, 50vw);
    }

    // Shared
    &_headingContent{
        display: block;
        padding: var(--paddingSubSectionHeadings);
    }

    &_empty{
        @include docItemShared();

        grid-column-start: 1;
        grid-column-end: 3;

        padding: v.px-to-rem(6) v.px-to-rem(10);
        max-width: 100%;
    }

    &_invalidIcon{
        top: 0;

        flex: 0 0 auto;
        width: 1.25rem;
        height: 1.25rem;
        margin: 0;

        font-style: normal;
    }

    // Reader Only
    &_readerContent{
        display: flex;
        flex-direction: column;
        align-items: start;
        gap: 1rem;

        padding: v.px-to-rem(12) 0;
    }

    &_included,
    &_excluded{
        width: 100%;
    }

    &_subsectionHeading{
        width: 8rem;
    }

    &_itemsUl{
        @include docItemSharedWrapper();
       
        list-style: none;
        padding: v.px-to-rem(6) 0;
        margin: 0;
    }

    
    // Builder only
    &_builderContent{
        @include docItemSharedWrapper();
    }
}


.docItemReadOnly{
    @include docItemShared();

    grid-column-start: 1;
    grid-column-end: 3;

    // Set by eye. Adds extra padding in the spot where the arrow would be
    // if this row were a details/summary element
    padding: v.px-to-rem(6) v.px-to-rem(10) v.px-to-rem(6) v.px-to-rem(30);

    display: grid;
    grid-template-columns: subgrid;

    &_itemDisplay{
        grid-column: 1;
        grid-row: 1;

        display: grid;
        grid-template-columns: auto auto 1fr;
        grid-template-rows: auto auto auto;
        grid-template-areas: 
            "qty qty qty"
            "partNo partNo ."
            "desc desc desc"
        ;
        gap: 0.5rem;

        @media screen and (min-width: $breakpoint_itemContentsOnOneLine) {
            grid-template-columns: auto auto 1fr;
            grid-template-rows: auto;
            grid-template-areas:
                "qty partNo desc"
            ;
        }

    }

    &_qtyAndInvalidWrapper{
        grid-area: qty;

        display: flex;
        gap: 0.25rem;
    }

    &_itemDisplayQty{
        width: 6rem;
        max-width: 50vw;
        overflow-x: auto;

        @media screen and (min-width: $breakpoint_itemContentsOnOneLine) {
            width: fit-content;
            max-width: 6rem;
        }
    }

    &_itemDisplayPartNo{
        grid-area: partNo;
    }

    &_itemDisplayName{
        grid-area: desc;
    }

    &_itemID{
        grid-column: 2;
        grid-row: 1;
    }

    &_itemAboveAssignments{
        cursor: pointer;  

        // Set by eye. Move details/summaries back so they line up with the "normal"
        // rows and the arrow goes in the spot left for it with the padding
        position: relative;
        left: v.px-to-rem(-17);
    }

    &_otherAssignments{
        margin-top: 0.25rem;
        font-style: normal;
        list-style-type: disc;

        // Set by eye. Positions the bullets under the main quantity
        padding-inline-start: v.px-to-rem(18);
    }

    &_qtyUsedElsewhere{
        position: relative;

        // Set by eye. Line up the strings with the part number
        left: v.px-to-rem(-2);
    }

    &_itemID{
        min-width: 3rem;

        &-withDetails{
            align-self: start;
        }
    }
}


@mixin minMaxButtons{
    --maxMinButtonsOuterRadius: 2rem;
    --maxMinButtonsOuterXPadding: 1rem;
    --maxMinButtonsInnerXPadding: 0.75rem;

    flex: 0 0 auto;

    align-self: stretch;
    font-size: v.px-to-rem(14);
    font-weight: 600;

    color: v.$c_tone-50;
    background: v.$g_button_inputAdjuster_main;
    border-color: v.$c_accent-700;

    // For the input-side radius
    border-radius: 0;

    &:disabled{
        background: transparent;
    }

    &:focus{
        @include v.focusOutline();
        background: v.$g_button_inputAdjuster_focus;
        position: relative;
        z-index: 2;
    }

    &:enabled:hover{
        color: v.$c_tone-50;
        background: v.$g_button_inputAdjuster_hover;
        border-color: v.$c_accent-600;
    }

    &-invalid{
        font-weight: 500;
        color: v.$c_txt_warning_g;
        background: v.$g_warning_hover;
        border-color: v.$c_warning;
       
        &:enabled:hover{
            color: v.$c_txt_warning_g;
            background: v.$g_warning_hover2;
            border-color: v.$c_warning;
            box-shadow: none;
        }
    }
}


.docItemEditor{
    @include docItemShared();

    grid-column-start: 1;
    grid-column-end: 3;

    padding: v.px-to-rem(6) v.px-to-rem(10);
    width: 100%;
    max-width: 100%;

    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: subgrid;
    grid-template-areas: 
        "desc desc"
        ". buttons"
    ;
    align-items: center;
    gap: 0.5rem 1.75rem;

    @media screen and (min-width: $breakpoint_oneOrTwoColumns){
        grid-template-rows: auto;
        grid-template-columns: subgrid;
        grid-template-areas: 
            "desc buttons"
        ;
        gap: 0 2rem;
    }
    padding: v.px-to-rem(8) v.px-to-rem(10);

    &_itemDisplay{
        grid-area: desc;

        display: flex;
        align-items: center;
        justify-content: start;
        gap: 0.5rem;
    }

    &_itemInputsContainer{
        grid-area: buttons;
        justify-self: stretch;

        display: flex;
        font-style: normal;

        position: relative;
    }

    &_qtyErrorTooltip{
        position: absolute;
        top: 0;
        right: 0;
        z-index: 3;

        margin: 0;
        width: 40ch;
        max-width: 75vw;
        
        padding: v.px-to-rem(8) v.px-to-rem(10);
    }

    &_maxBtn{
        @include minMaxButtons();
        padding: 0 var(--maxMinButtonsInnerXPadding) 0 var(--maxMinButtonsOuterXPadding);
        border-right: none;
        border-top-left-radius: var(--maxMinButtonsOuterRadius);
        border-bottom-left-radius: var(--maxMinButtonsOuterRadius);
    }

    &_minBtn{
        @include minMaxButtons();
        padding: 0 var(--maxMinButtonsOuterXPadding) 0 var(--maxMinButtonsInnerXPadding);
        border-left: none;
        border-top-right-radius: var(--maxMinButtonsOuterRadius);
        border-bottom-right-radius: var(--maxMinButtonsOuterRadius);
    }

    &_qtyInput{
        margin: 0;
        padding: v.px-to-rem(4);
        border-radius: 0;

        flex-grow: 2;
        min-width: 3rem;
        max-width: 5rem;
        overflow-x: auto;
        text-align: center;

        &:invalid{
            border-color: v.$c_warning;
        }

        &:focus{
            position: relative;
            z-index: 2;
        }
    }
}



// || Modal: Issue Document
.docBuilderIssueDoc{
    &_form{
        display: flex;
        flex-direction: column;
        align-items: start;
        justify-content: start;
        gap: v.px-to-rem(24);

        width: 15rem;
        max-width: 100%;

        padding: v.px-to-rem(24) v.px-to-rem(16) v.px-to-rem(16);
    }

    &_formRow{
        display: flex;
        flex-direction: column;
        align-items: start;
        justify-content: start;
    }
    &_submitBtn{
        width: 6rem;
        max-width: 40%;
        height: 2rem;
    }
}



// || Text formatting
.doc-version{
    display: inline-block;
    margin-left: 0.5rem;
    padding: 0.125rem 0.5rem;

    font-size: 0.75rem;
    white-space: nowrap;

    background: v.$c_tone-950;

    border: 1px solid v.$c_tone-1000;
    border-left: 3px solid v.$c_accent-700;
    border-top-right-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
}

.no-special-instructions{
    margin: 0.75rem;
    padding: 0.5rem 0.75rem;
}



// || Responsive Layout
// Spread out into two columns on wider screens
@media screen and (min-width: $breakpoint_oneOrTwoColumns){
    .documentPage{
        &_layout{
            grid-template-columns: 25rem auto;
            grid-template-rows: auto min-content 1fr;
            grid-template-areas:
                "controls   controls"
                "general    lineItems"
                "special    lineItems"
            ;
            justify-content: start;
            width: auto;
        }
    }

    .documentPageGeneral{
        width: 25rem;
    }

    .documentPageSpecialInstructions{
        width: 25rem;
    }
}

