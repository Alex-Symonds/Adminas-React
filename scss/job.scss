@use "variables" as v;

/*  Job formatting.
    Contents:
        || SCSS Variables 
        || Misc (Buttons and warnings)
        || Burger Menu
        || Layout
        || Summary section
        || Job Details & PO Section
        || Job Details Section
        || PO Section
        || Comments Section
        || Items Section
        || Items Table
        || Price Check Section
        || Price Comparison Table
        || Documents Section
        || Modals
*/

// || SCSS Variables (probably breakpoints or used in breakpoints)
$breakpoint_docsCardsToTable: 453px;
$jobPage_gapWhenSidebarStaysOn: 0.5rem;

$px_width_jobTwinPanel: 500;
$width_jobTwinPanel: #{v.px-to-rem($px_width_jobTwinPanel)};
$gap_jobDetailsPanels: 4rem;
$breakpoint_jobDetailsPO_asRowNoSidebar: v.px-to-rem($px_width_jobTwinPanel * 2) + $gap_jobDetailsPanels;
$breakpoint_jobDetailsPO_asRowWithSidebar: $breakpoint_jobDetailsPO_asRowNoSidebar + $jobPage_gapWhenSidebarStaysOn + v.$sidebarWidthOnDesktop + v.px-to-rem(8 * 2);

// || Misc (Buttons and warnings)
.add-button{
    margin: 0.3rem 0 0.3rem 0.3rem;
}


#toggle_po_form_btn{
    margin-top: 0.4rem;
}


.ji-edit{
    margin-right: 0;

    &:hover{
        background-position: 5px 4px;
    }
}


#toggle_item_form_btn{
    margin-top: 3px;
}


.more-icon:hover span{
    display: block;
    white-space: nowrap;
    padding: v.px-to-rem(2) v.px-to-rem(4);
    width: fit-content;
    left: auto;
    top: 0;
    right: 26px;
}


// || Burger Menu
.burgerMenu{
    --size: #{v.px-to-rem(12)};

    position: fixed;
    top: 0;
    right: v.px-to-rem(4);
    z-index: 10;

    height: calc(var(--size) + #{ v.px-to-rem(18) });
    width: calc(var(--size) + #{ v.px-to-rem(18) });

    overflow: hidden;

    display: flex;
    align-items: center;
    justify-content: center;

    &_button{
        --stripeColor: #{v.$c_tone-200};
        --stripeHeight: #{v.px-to-rem(2)};
    
        width: calc(var(--size) + #{v.px-to-rem(4)});
        height: var(--size);
        border: transparent;
    
        background: linear-gradient(
                        var(--stripeColor) 0%,
                        var(--stripeColor) var(--stripeHeight),
                        transparent calc(var(--stripeHeight) + 1px),
    
                        transparent calc(50% - var(--stripeHeight) / 2 - 1px),
                        var(--stripeColor) calc(50% - var(--stripeHeight) / 2),
                        var(--stripeColor) calc(50% + var(--stripeHeight) / 2),
                        transparent calc(50% + var(--stripeHeight) / 2 + 1px),
    
                        transparent calc(100% - var(--stripeHeight) - 1px),
                        var(--stripeColor) calc(100% - var(--stripeHeight)),
                        var(--stripeColor) 100%,                        
                    );
        
        &:hover{
            --stripeColor: #{v.$c_accent_300};
        }
    }
}


// || Sidebar
.jobSideNav{
    --desktopPadding: #{v.px-to-rem(16)};
    --mobilePadding: #{v.px-to-rem(6)};

    position: fixed;
    top: 0;
    left: 0;

    z-index: 5;

    background: linear-gradient(190deg, v.$c_tone-900 0%, v.$c_tone-950 100%);
    
    max-width: 100vw;

    min-height: 100vh;
    height: 100vh;

    display: flex;
    flex-direction: column;

    box-shadow: 0 8px 12px 0 rgba(black, 33%);

    overflow-x: hidden;
    overflow-y: auto;

    transition: all 325ms ease-in;

    &-open{
        min-width: 100%;
        width: 100vw;
        padding: var(--desktopPadding);
    }

    &-closed{
        min-width: 0;
        width: 0;
        padding: 0;
    }

    &_mobileOnly{
        display: block;
    }
    &_desktopOnly{
        display: none;
    }

    &_closeButton{
        position: relative;
        align-self: end;
        top: v.px-to-rem(-10);
        right: v.px-to-rem(2);
    }
    
    &_topWrapper{
        display: flex;
        flex-direction: column;
        gap: 1.75vh;
    }

    &_heading{
        margin: 0;
        padding: 0;
        border: none;
        max-width: 100%;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    &_subheading{
        margin: 0;
        padding: 0;
        line-height: 1;
        font-size: v.px-to-rem(18);

        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    &_toggleWrapper{
        width: fit-content;
    
        color: v.$c_tone-100;
    
        display: flex;
        flex-direction: row-reverse;
        justify-content: space-between;
        gap: v.px-to-rem(10);
    }

    &_list{
        margin: 4vh 0 0 0;
        padding: 0;
        list-style-type: none;
    
        display: flex;
        flex-direction: column;
        gap: v.px-to-rem(20);
    }

    &_button{
        display: block;
        padding: v.px-to-rem(8) v.px-to-rem(16);
        width: 100%;
        
        font-size: v.px-to-rem(20);
        font-weight: 500;
        text-align: left;
        text-decoration: none;
        color: v.$c_txt_main;
    
        background: none;
    
        border-width: 0 0 0 v.px-to-rem(4);
        border-style: solid;
        border-color: transparent;
    
        &:hover{
            color: v.$c_txt_main;
        }

        &-on{
            background: rgba(v.$c_tone-950, .5);
            border-color: v.$c_accent-500;
        }
        &:not(.jobSideNav_button-on):hover {
            border-color: v.$c_accent-500;
            background: v.$c_tone-700;
        }

        &:active{
            color: v.$c_tone-100;
        }
        &:focus-visible{
            outline-color: v.$c_tone-300;
            outline-style: dotted;
            outline-width: v.px-to-rem(1);
        }
    }

}
@media screen and (min-width: v.$breakpoint_jobNavNoStretch){
    .jobSideNav{
        max-width: var(--jobSidebarW);

        &-open{
            min-width: var(--jobSidebarW);
            width: var(--jobSidebarW);
        }

        &_closeButton{
            right: v.px-to-rem(-10);
        }
    }
}
@media screen and (min-width: v.$breakpoint_permaShowJobNav){
    .jobSideNav{
        position: relative;
        left: calc(var(--mainContentSideMargins) / -2);
        z-index: 1;
        min-width: var(--jobSidebarW);
        width: var(--jobSidebarW);
        padding: var(--desktopPadding);

        &_closeButton{
            display: none;
        }
        &_mobileOnly{
            display: none;
        }
        &_desktopOnly{
            display: block;
        }
    }
    .burgerMenu{
        display: none;
    }
    .jobPage{
        --jobSidebarGap: #{$jobPage_gapWhenSidebarStaysOn};
        max-width: calc(100% - var(--jobSidebarGap));
        gap: var(--jobSidebarGap);
    }
}



// || Layout
.jobPage{
    --jobSidebarW: #{v.$sidebarWidthOnDesktop};
    display: flex;

    &_emptySection{
        grid-column: 2;
        margin: 1rem v.px-to-rem(6);
        width: v.$MAX_WIDTH;
        max-width: 100%;
    }
}

.jobPageHeading{
    &_heading,
    &_subheading{
        overflow-x: hidden;
        width: 100%;
        word-wrap: break-word;
    }

    &_subheading{
        color: v.$c_tone-100;
        font-weight: 500;
    }
}

.jobPageContentsWrapper{
    display: flex;
    flex-direction: column;
    width: 100%;
}










// || Summary section
.jobSummary_contentsLayout{
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.timeValueContainer{
    display: flex;
    flex-wrap: wrap;
    width: calc(#{v.px-to-rem(160)} + #{v.px-to-rem(320)} + 2rem);
    max-width: 100%;
    gap: 1rem;
}

.jobSummaryStatus{
    &_container{
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem 0.7rem;
        padding: 0.7rem;
    }
}

@media screen and (min-width: 930px){
    .jobSummary_contentsLayout{
        display: grid;
        grid-template-rows: auto v.px-to-rem(88) auto auto;
        grid-template-columns: auto 1fr;
        grid-template-areas: 
            "status status"
            "timeValue items"
            "customerRef items"
            "pinned pinned"
        ;
        gap: v.px-to-rem(16);
    }

    .jobSummaryStatus{
        grid-area: status;
        align-self: start;
    }
    .timeValueContainer{
        grid-area: timeValue;
        align-self: start;
    }
    .jobCommentSection{
        grid-area: pinned;
    }
    .jobSummaryCustomerRef{
        grid-area: customerRef;
    }
    .jobSummaryItems{
        grid-area: items;
    }
}

.jobSummaryTimestamp_text,
.jobSummaryOrderValue_text{
    padding: v.px-to-rem(8) v.px-to-rem(12);
    font-size: v.px-to-rem(20);
    font-weight: 700;
    margin: 0;
}

.jobSummaryTimestamp{
    width: v.px-to-rem(160);
    max-width: 100%;
}

.jobSummaryOrderValue{
    width: v.px-to-rem(320);
    max-width: 100%;
}

.jobSummaryCustomerRef{
    &_list{
        padding: v.px-to-rem(8) v.px-to-rem(12);
        margin: 0;
        list-style: none;
        max-height: v.px-to-rem(210);
        overflow-y: auto;
    }

    &_listItem{
        padding: v.px-to-rem(6) v.px-to-rem(6);
        border-bottom: 1px solid v.$c_tone-600;
    }

    &_poRef{
        font-weight: 700;
    }

    &_poDated{
        color: v.$c_tone-400;
    }
}

.jobSummaryItems{
    &_list{
        padding: v.px-to-rem(8) v.px-to-rem(12);
        margin: 0;
        list-style: none;
    }
    
    &_item{
        padding: v.px-to-rem(6) v.px-to-rem(6);
        border-bottom: 1px solid v.$c_tone-600;
    }

    &_price{
        color: v.$c_tone-400;
    }

    &_moreItems{
        margin: 0 0 0 v.px-to-rem(12);
        padding: 0 v.px-to-rem(6) v.px-to-rem(14);
    }
}


// || Job Details & PO Section
.jobDetailsPO{
    grid-row: 2;

    width: 100%;

    &_wrapper{
        grid-column: 2;

        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: $gap_jobDetailsPanels;
        min-width: 0%;
        max-width: 100%;

        padding: v.px-to-rem(28) 0 0 0;

        @media screen and (min-width: $breakpoint_jobDetailsPO_asRowNoSidebar){
            flex-direction: row;
        }
        @media screen and (min-width: v.$breakpoint_permaShowJobNav){
            flex-direction: column;
        }
        @media screen and (min-width: $breakpoint_jobDetailsPO_asRowWithSidebar){
            flex-direction: row;
        }
    }
}


// || Job Details Section
.jobDetails{
    $breakpoint_addressKeyValueToRow: 400px;
    --jobDetailsWidth: #{$width_jobTwinPanel};
    --jobDetailsLabelWidth: 8rem;

    width: var(--jobDetailsWidth);
    max-width: 100%;

    &_headerContent{
        max-width: 100%;

        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    &_subsection{
        margin: 1rem 0 0 0;

        &.warning{
            border-left: 3px solid v.$c_warning_bright;
    
            .intro-line, h4{
                background: v.$c_warning;
            }
    
            p{
                margin: 0;
                padding: 0.5rem;
            }
        }
    }

    &_subsectionHeading{
       width: var(--jobDetailsLabelWidth);
       margin-bottom: v.px-to-rem(4);
    }

    &_row{
        display: grid;
        grid-template-columns: var(--jobDetailsLabelWidth) 1fr;

        padding: v.px-to-rem(3) 0;

        border-bottom: 1px solid v.$c_tone-800;

        &-wrap{
            display: flex;
            flex-direction: column; 
            @media screen and (min-width: #{$breakpoint_addressKeyValueToRow}){
                display: grid;
            }
        }
    }

    &_rowLabel{
        display: inline-block;
        min-width: var(--jobDetailsLabelWidth);
        max-width: min(100%, var(--jobDetailsLabelWidth));

        margin-left: v.px-to-rem(11);
    }

    &_rowContent{
        &-wrap{
            padding-left: v.px-to-rem(32);
            @media screen and (min-width: #{$breakpoint_addressKeyValueToRow}){
                padding-left: 0;
            }
        }
    }
}


// || PO Section
.jobPO{
    width: $width_jobTwinPanel;
    max-width: 100%;

    &_headerContent{
        display: flex;
        align-items: center;
        height: v.px-to-rem(33);
    }

    &_content{
        display: flex;
        flex-direction: column;
        gap: v.px-to-rem(22);
    }

    &_subsectionHeading{
        width: 8rem;
    }

    &_receivedSection{
        display: flex;
        flex-direction: column;
        gap: v.px-to-rem(12);
        padding-bottom: v.px-to-rem(12);
    }

    &_poListWrapper{
        margin: 0 v.px-to-rem(4);

        @media screen and (min-width: 400px){
            margin: 0 v.px-to-rem(8);
        }
    }

    &_comparisonTableWrapper{
        margin: v.px-to-rem(8) 0 0 v.px-to-rem(4);
        width: fit-content;
        max-width: calc(100% - #{v.px-to-rem(16)});
        padding: 0 0 v.px-to-rem(3) 0;

        @media screen and (min-width: 400px){
            margin: v.px-to-rem(8) 0 0 v.px-to-rem(16);
        }
    }

    &_comparisonTableHeading{
        padding: v.px-to-rem(6);
        background: rgba(black, 0.3);
        border-left: 2px solid v.$c_warning;
        width: 100%;
    }
}


.poEditor{
    &_poNumInput{
        width: 100%;
    }
}


#po_table{
    .value{
        text-align: right;
    }

    .ref{
        max-width: 440px;
    }

    tr{
        position: relative;

        &.invalid{
            border-width: 1px 1px 1px 3px;
            border-style: solid;
            border-color: v.$c_warning v.$c_warning v.$c_warning v.$c_warning_bright;
            background: v.$c_warning_darker;

            .invalid-icon{
                position: relative;
                top: 0.1rem;

                width: 1.2rem;
                height: 1.2rem;

                margin-right: 0.5rem;                

                span{
                    left: 26px;
                    right: auto;
                }
            }

            .value{
                border-bottom: 1px solid red;
            }
        }
    }

    .panel{
        position: fixed;
        bottom: 0;

        background: v.$c_tone-950;
        z-index: 3;

        box-shadow: v.$panel_shadow;
    }
}


@media screen and (max-width: 700px){

    #po_table{
        width: 100%;

        .panel{
            position: absolute;
            top: 0;
            left: 50%;
            bottom: auto;
            transform: translate(-50%);
        }

        thead tr{
            position: absolute;
            top: -9999px;
            left: -9999px;
        }

        td{
            display: inline-block;
            padding: 0.1rem 0.4rem;
            border: none;
            text-align: left;
            vertical-align: middle;
            height: auto;
        }

        tbody {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        tbody tr{
            display: grid;
            grid-template-columns: 6rem 8rem auto min-content;
            grid-template-rows: auto repeat(2, 1.5rem);
            grid-template-areas: 
                "ref ref ref edit"
                "date_on_po date_received . ."
                "value value value value"
            ;

            min-width: 250px;
            max-width: 450px;

            margin: 0.5rem 0 0 0;
            padding: 0.3rem 0.2rem;

            border: 1px solid v.$c_tone-1000;
            box-shadow: 0 0 10px 1px rgba(black, 35%);
        }


        .ref{
            grid-area: ref;

            font-size: 1.2rem;
            font-weight: bold;

            max-width: min(400px, 76vw);
            overflow-wrap: break-word;
            
            &:before{
                content: 'PO #';
                display: inline-block;
                padding: 0 0.5rem 0 0;
            }
        }
        .date_on_po{
            grid-area: date_on_po;
            white-space: nowrap;
        }
        .date_received{
            grid-area: date_received;

            &:before{
                content: 'rcvd.';
                display: inline-block;
                padding: 0.08rem 0.5rem 0 0;
            }

            border-left: 3px solid v.$c_good-500;
            background: v.$c_tone-1000;
            font-size: 0.9rem;
            padding: 0.08rem 0.4rem;
            white-space: nowrap;
        }
        .value{
            grid-area: value;
            text-align: left;
        }
        tr.invalid .value{
            border-bottom: none;
        }

        .edit{
            grid-area: edit;
           padding: 0 v.px-to-rem(5);
        }
    }
}

@media screen and (min-width: 400px){
    #po_table{
        tbody tr{
            grid-template-columns: 6rem 8rem auto v.px-to-rem(16);
            min-width: 286px;
        }
    }
}




// || Comments Section
.jobCommentSection{
    width: v.px-to-rem(708);
    max-width: 100%;

    &-stacked{
        margin-top: 2rem;
    }
}

.commentSection_empty{
    margin: v.px-to-rem(10) v.px-to-rem(12);
}


.jobComments{
    --jobCommentsGap: #{v.px-to-rem(4)};

    position: relative;

    &_addButton{
        grid-column: 2;
    }

    &_filterButton{
        position: absolute;
        top: 0;
        right: 0;
        z-index: 3;

        display: flex;
        align-items: center;
        justify-content: center;

        border: 0;
        border-radius: 13px;
        border: 1px solid transparent;
    
        height: 30px;
        width: 30px;
    
        background-image: url(../images/i-filter-hollow.svg);
        background-color: transparent;
        background-repeat: no-repeat;
        background-position: right 5px top 2px;
        background-size: 24px 24px;
        text-indent: -9999px;
    
        &:hover{
            border: 1px solid v.$c_tone-300;
    
            color: v.$c_txt_main;
            font-weight: bold;
    
            background-image: url(../images/i-filter-filled.svg);
            background-color: v.$c_tone-800;
            animation-duration: 0.2s;
            animation-fill-mode: forwards;
            animation-name: expand_open_filter_button;
        }   

        &:focus,
        &:focus-visible{
            @include v.focusOutline();
        }
    }

    &_filterButtonText{
        position: relative;
        left: -12px;
        line-height: 1rem;
        font-size: 1rem;
    }

    &_controls{
        position: relative;
        height: 30px;
    }

    &_viewExistingWrapper{
        // When this is here, the comments resize to fit narrower screens.
        // If it's moved to the viewExisting element and the wrapper is removed,
        // the comments go "WAHEEEEY!" and refuse to shrink.
        min-width: 0;
        max-width: 100%;
    }

    &_viewExisting{
        display: flex;
        flex-direction: column;
        width: max-content;
        max-width: 100%;
        gap: v.px-to-rem(5);
    }

    &_orderByForm{
        position: absolute;
        top: 1px;
        right: 42px;
        z-index: 2;
    }

    &_orderBySelect{
        background: rgba(black, 0.125);
        border-color: v.$c_tone-700;
        margin: 0;
        font-size: v.px-to-rem(14);
    }

    &_container{
        margin-top: 0;
        padding-bottom: v.px-to-rem(6);
    }
}


@keyframes expand_open_filter_button {
    from {
        width: 30px;
        text-indent: -9999px;
    }

    95%{
        text-indent: -9999px;
    }
    
    to {
        width: 6rem;
        text-indent: 0;
    }
}


@media screen and (min-width: 650px){
/* 
    As the distance between the "add comments" button and the filter/sort controls 
    grows, the impression of the three of them forming a "controls bar" is lost.

    Once that occurs, maintaining the vertical position for the "controls bar" 
    effect makes the comments look bunched up against the heading. This fixes that.
*/
    .jobComments{
        &_addButton{
            // Add it back into the document flow
            position: static;
            align-self: start;
        }

        &_viewExisting{
            // With all the spreading out we just did, /this/ looks bunched up
            gap: v.px-to-rem(7);
        }
    }
}


.orderByForm{
    display: flex;
    flex-direction: column;
    align-items: end;
    width: max-content;
}


.commentFilterEditor{
    &_form{
        display: flex;
        flex-direction: column;
        gap: 1rem;

        padding: 0.75rem 0;
    }
}


.radioFilter{
    --outerBorderRadius: 0.25rem;
    --normalBorderWidth: 1px;

    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    justify-items: stretch;

    border: 1px solid v.$c_tone-900;
    
    &_optionStr{
        text-align: center;
    }

    &_optionLabel{
        display: flex;
        justify-content: center;
        align-items: center;

        font-size: v.px-to-rem(14);

        padding: v.px-to-rem(6) v.px-to-rem(8);

        border: var(--normalBorderWidth) solid v.$c_tone-600;
        
        // Remove borders around middle element to prevent double borders
        &:nth-of-type(2){
            border-width: var(--normalBorderWidth) 0;
        }

        // Add rounded borders to the first and last of type
        &:nth-of-type(1){
            border-top-left-radius: var(--outerBorderRadius);
            border-bottom-left-radius: var(--outerBorderRadius);

            &:before,
            &:after{
                border-top-left-radius: var(--outerBorderRadius);
                border-bottom-left-radius: var(--outerBorderRadius);
            }
        }
        &:nth-of-type(3){
            border-top-right-radius: var(--outerBorderRadius);
            border-bottom-right-radius: var(--outerBorderRadius);

            &:before,
            &:after{
                border-top-right-radius: var(--outerBorderRadius);
                border-bottom-right-radius: var(--outerBorderRadius); 
            }
        }

        &-unchecked{
            color: v.$c_tone-200;
        }
        &-checked{
            background: v.$c_tone-800;
            color: v.$c_tone-50;

            position: relative;

            /*  
                When an element is selected, the goal is for its border to brighten.
                This is an issue for the middle element, because it lacks left and right borders:
                they were removed, to avoid doubled borders between elements.
                Solution: for all elements, instead of brightening the actual border, add a 
                transparent pseudo element over the top, with brightened borders.
            */
            &:before{
                content: '';
                display: block;
                width: calc(100% + var(--normalBorderWidth) * 2);
                height: calc(100% + var(--normalBorderWidth) * 2);

                position: absolute;
                bottom: calc(-1 * var(--normalBorderWidth));
                left: calc(-1 * var(--normalBorderWidth));

                border: var(--normalBorderWidth) solid v.$c_tone-400;
            }

            /*
                When an element is selected, the goal is for the bottom border to be thicker
                and in the accent colour.
                When borders have different colours, CSS defaults to a bevel join at the 
                corners. I would prefer for the bottom border to take the entire corner.
                Solution: another pseudo element. Set height and width to what I want for my
                "border", background to the colour, then posiiton it over the bototm border.
            */
            &:after{
                content: '';
                display: block;
                width: calc(100% + var(--normalBorderWidth) * 2);
                height: 2px;

                position: absolute;
                bottom: calc(-1 * var(--normalBorderWidth));
                left: calc(-1 * var(--normalBorderWidth));
                background: v.$c_accent-500;
            }

        }
    }
}



// || Items Section
.jobItems{

    &_contentWrapper{
        grid-column: 2;
    }

    &_existingAndDetailsContainer{
        width: 100%;
    
        .multi-parent-warning{
            margin: 0.5rem;
            padding: 0.5rem;
            background: v.$c_tone-800;
            color: v.$c_tone-200;
    
            emphasis{
                font-weight: bold;
                font-style: italic;
                color: v.$c_tone-50;
            }
        }
    
        span.desc{
            margin: v.px-to-rem(8) 0 0 0.75rem;
        }

    }

    &_detailsWrapper{
        // position: fixed;
        // top: 0;
        // right: 0;
        // z-index: 50;
        // width: 100%;

        // margin: 0;
        // padding: 0;

        // border-bottom: 1px solid v.$c_tone-500;
        // box-shadow: 0 0 30px 20px rgba(black, 80%);
        background: v.$c_tone-800;

        display: grid;
        grid-template-rows: 35px 1fr 44px;
        grid-template-columns: 100%;
        
        // &-retracted{
        //     height: 50dvh;
        // }
        // &-expanded{
        //     height: 100dvh;
        // }

        &-inactive{
            @include v.visually-hidden;
        }
    }

    &_detailsHeaderStrip{
        position: relative;
        max-height: 35px;
        height: 35px;
        min-height: 35px;

        width: 100%;

        display: flex;
        align-items: center;
        justify-content: space-between;

        background: v.$c_tone-500;
        border-left: 3px solid v.$c_tone-300;
    }

    &_detailsHeader{
        margin: 0 0 0 1rem;
    }

    &_noSelectionMessage{
        padding: 0.5rem 1rem;
        color: v.$c_tone-100;
        align-self: start;
    }

    &_detailsContent{
        flex-grow: 2;

        display: flex;
        flex-direction: column;
        align-items: center;
        padding: v.px-to-rem(4) v.px-to-rem(4);

        border-color: transparent transparent v.$c_tone-400 v.$c_tone-300;
        border-style: solid;
        border-width: 0 0 1px 3px;

        background: v.$c_tone-950;

        overflow-y: auto;
    }

    // &_detailsExpandCollapseWrapper{
    //     height: 44px;

    //     display: flex;
    //     align-items: center;
    //     justify-content: center;
    // }

    // &_detailsExpandCollapseButton{
    //     width: 60px;
    //     height: 40px;
    //     background-size: 30px;
    //     background-repeat: no-repeat;
    //     background-color: transparent;
    //     background-position: center;

    //     border: none;

    //     &-expand{
    //         background-image: url(../images/i-chevron-down.svg);
    //         &:hover{
    //             background-image: url(../images/i-chevron-down-blue.svg);
    //         }
    //     }

    //     &-collapse{
    //         background-image: url(../images/i-chevron-up.svg);
    //         &:hover{
    //             background-image: url(../images/i-chevron-up-blue.svg);
    //         }
    //     }
    // }

    &_detailsJobItem{
        --indentLeft: 1rem;

        width: calc(100% - var(--indentLeft));
        max-width: min(35rem, 100%);
        
        background: v.$c_tone-950;

        border-bottom: 1px solid v.$c_tone-400;
        box-shadow: 0 0 20px 1px rgba(black, 50%);

        margin: 1rem 0 0 var(--indentLeft);
    
        &:first-of-type{
            width: 100%;
            margin: 0;
            max-width: 40rem;
        }

        .ji-list{
            padding: 0.1rem 0 0.3rem 0;
    
            table{
                margin: 0;
                color: v.$c_tone-200;
    
                .desc{
                    padding: 0 0.4rem;
                }
            }

            .name-tag{
                position: absolute;
                top: -9999px;
                left: -9999px;
            }
        }
    
        .product-quantity{
            display: inline-block;
            padding: 0.3rem 0.5rem;
            font-size: 1.1rem;
            font-weight: bold;
        }
    
        a{
            text-decoration: none;
        }
    
        .subsection{
            margin: 0;
            border-left: 3px solid v.$c_tone-400;
            border-bottom: none;
        }
    
        .subsection_heading{
            font-size: 1rem;
    
            .desc{
                &:before,
                &:after{
                    content: '"';
                }
    
                margin: 0.2rem 0 0 0;
                font-style: italic;
                font-weight: normal;
                font-size: 0.95rem;
                color: v.$c_tone-200;
    
                padding: 0.1rem;
            }
        }
    
        ul{
            margin: 3px 0 0 0;
            padding-bottom: 0.3rem;
        }
    
        li{
            color: v.$c_tone-200;
        }
    
        .assignment-icon{
            display: inline-block;
            border: 1px solid v.$c_tone-1000;
            border-radius: 0.2rem;
            font-size: 0.75rem;
            margin: 0;
            padding: 0;
            margin: 0 0.1rem;
        
            span{
                display: block;
                float: left;
                padding: 1px 6px;
                margin: 0;
            }
        
            .label{
                border-top-left-radius: 0.15rem;
                border-bottom-left-radius: 0.15rem;
                border-right: 2px solid v.$c_tone-800;
                background: v.$c_tone-950;
                color: v.$c_tone-200;
            }
            .status{
                background: v.$c_tone-950;
                font-weight: bold;
            }
           
            &:last-of-type{
                border-bottom: 1px solid v.$c_tone-1000;
            }
        }
    
        .money{
            padding: 4px 2px 10px 0.75rem;
    
            &.subsection{
                display: flex;
                align-items: center;
                justify-content: space-between;
                flex-wrap: wrap;

                .selling_price{
                    font-size: 1.2rem;
                    font-weight: bold;
                    margin-left: 0;
                }
            }
        }
    
        .std-accs-container{
            border-left: 3px solid v.$c_tone-400;
    
            p{
                padding: 0.2rem 0 0.2rem 0.4rem;
                width: calc(100% - 0.4rem);
                background: v.$c_tone-800; 
                margin: 0;
            }
        }
    
        .module-status-section{
            .intro-line{
                display: flex;
                align-items: center;
                flex-wrap: wrap;
                width: 100%;
                padding: 0.2rem 0.1rem 0.2rem 0.4rem;
                background: v.$c_accent-600;
    
                .display-text{
                    flex-grow: 2;
                }
                &:after{
                    content: '';
                    display: table;
                    clear: both;
                }
    
                .warning-msg{
                    margin: 0 0.5rem 0 0.5rem;
                    padding: 0 0.7rem 0.2rem 0.3rem;
                
                    .msg{
                        position: relative;
                        top: -0.1rem;
                    }
                
                    .invalid-icon{
                        top: 0.2rem;
                    }
                }
            }
        }

        .edit-icon span{
            right: 0;
        }
    
        .assignments{
            border-left: 3px solid v.$c_tone-400;
            border-color: rgb(212, 199, 163);

            .intro-line{
                justify-content: space-between;
                flex-wrap: wrap;
                background: v.$c_product_dark;

                .usage-counters{
                    padding-top: 0.3rem;
                }
            }
        }
    
        .modules-ok{
            border-left: 3px solid v.$c_tone-400;
            .intro-line{
                background: v.$c_tone-800;
            }
        }  
    
        .modules-incomplete{
            border-left: 3px solid red;
            .intro-line{
                background: v.$c_warning_dark;
            }
        }
    
        .modules-excess{
            border-left: 3px solid v.$c_flag_special_bright;
            .intro-line{
                background: v.$c_flag_special_dark;
            }
            li{
                color: v.$c_tone-200;
            }
        } 
    
        &.product .subsection,
        .subsection.product{
            .subsection-heading{
                background: v.$c_product_dark;
            }
            border-color: v.$c_product_light;
        }
    }
}


@media screen and (min-width: 1470px){
    .jobItems{
        
        &_existingAndDetailsContainer{
        /*
            Goals: 
            * The table should neither grow nor shrink
            * Details should "try to be" 40rem wide, regardless of content, but can shrink to fit on the page

            Solution:
            * Set the column for details to 1fr
            * Set the width of the grid element as a whole to the desired width (table + 40rem details + a gap)
            * Set the max-width of the grid element to the space remaining on the screen

            Result:
            The max-width togetehr with 1fr makes details shrink when needed; the width pushes it to 40rem when it can.

            Note:
            max-width is based around 100vw rather than 100% because anything using 100% as a basis blew out the 
            container.
        */
            --maxWidthJobItems: calc(100vw - var(--jobSidebarW) - var(--jobSidebarGap) - 3rem);
            --widthForTable: 48rem;
            --widthForDetails: 40rem;
            --tableDetailsSpacer: 1rem;

            display: grid;
            grid-template-columns: var(--widthForTable) 1fr;
            grid-template-rows: auto auto;
            grid-template-areas: 
            "table details"
            ". details"
            ;
            justify-items: stretch;
            align-items: start;
            gap: var(--tableDetailsSpacer);

            width: calc(var(--widthForTable) + var(--widthForDetails) + var(--tableDetailsSpacer));
            max-width: var(--maxWidthJobItems);
        }

        &_existing{
            grid-area: table;
            justify-self: start;
            align-self: start;
        }

        &_detailsWrapper{
            grid-area: details;

            &.expandableWrapper{
                position: static;
                box-shadow: none;

                .expandableWrapper_toolbar{
                    display: none;
                }
            }

            &-inactive{
                @include v.visually-unhidden;
                position: static;
            }
        }

        &_closeDetailsButton{
            @include v.visually-hidden;
        }

        &_detailsWrapper{
            grid-template-rows: 35px 1fr;

            &-retracted,
            &-expanded{
                min-height: v.px-to-rem(56);
                height: fit-content;
            }
        }

        &_detailsContent{
            align-items: start;
            padding: v.px-to-rem(4);
        }
        
        // &_detailsExpandCollapseWrapper{
        //     display: none;
        // }

        &_detailsJobItem{
            --indentLeft: 1.5rem;
            box-shadow: none;

            .money{
                &.subsection{
                    display: block;

                    .selling_price{
                        margin-left: 0.5rem;
                    }
                }
            }

            .assignments{
                .intro-line{
                    justify-content: start;
                    flex-wrap: nowrap;
                }
            }

            .module-status-section {
                .intro-line{
                    flex-wrap: nowrap;
                }
            }

            .edit-icon span{
                right: 26px;
            }

            .ji-list{ 
                table{
                    margin-left: v.px-to-rem(13);
                }

                .name-tag{
                    position: static;
                }
            }
        }
    }
}


// || Items Table
#jobitems_table{

    .quantity,
    .selling_price{
        text-align: right;
    }

    .product_name{
        width: 15rem;
        max-width: 15rem;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .modular{
        font-size: 0.9rem;
    }

    .ji_id .name-tag.id{
        margin: 0;
    }

    // When something is selected "dim" the non-selected text and statuses
    &.details-visible{
        td{
            color: v.$c_tone-500;
        }

        .content-highlight-wrapper{
            &.modules-ok,
            &.modules-excess,
            &.modules-incomplete{
                color: v.$c_tone-400;
                border-color: v.$c_tone-400;
                background: v.$c_tone-800;
            } 
        }
    }

    // When a row is selected as a parent, a wide side-border should appear against quantity.
    // When a row is selected as a child or sibling, a wide side-border should appear against part no.
    // The modular status also looks nice with a wide side-border.
    // It's nice for this border to appear inside the td so the table's border lines
    // are uninterrupted. To this end, there's a div wrapped around the contents of those
    // three <td>s in each row.

    // Get rid of the padding on cells with a div wrapper
    .modular,
    .ji_id,
    .part_no{
        padding: 0;
    }

    // Reapply td padding/formatting and the extra border
    .content-highlight-wrapper{
        display: flex;
        align-items: center;
        justify-content: center;

        height: 100%;
        width: 100%;

        padding: 0.1rem 0.5rem;
        border-left: 3px solid transparent;
    }

    // Set colours for the modular status wrappers, which apply:
    //      > When the table is in "default mode", with nothing selected
    //      > When the item has been selected (directly or indirectly)
    &.details-visible .details-active .content-highlight-wrapper,
    &.details-visible .details-slotFiller .content-highlight-wrapper,
    &.details-visible .details-sameProduct .content-highlight-wrapper,
    .content-highlight-wrapper{

        &.modules-ok{
            color: white;
            border-color: v.$c_good-500;
            background: v.$c_good-800;
        }
    
        &.modules-incomplete{
            color: white;
            border-color: v.$c_warning_bright;
            background: v.$c_warning_dark;
        }
    
        &.modules-excess{
            color: white;
            border-color: v.$c_flag_special_bright;
            background: v.$c_flag_special_dark;
        } 
    }

    // Set special formatting to <tr>s selected for details (directly or indirectly)
    .details-active {
        background: v.$c_tone-200;

        td{
            color: black;
        }

        .ji_id .content-highlight-wrapper{
            border-color: v.$c_accent-500;
        }
    }

    .details-slotFiller{
        .part_no,
        .product_name,
        .selling_price,
        .modular{
            color: white;
            background: v.$c_tone-500;
            border-color: v.$c_tone-400;
        }

        .part_no .content-highlight-wrapper{
            border-color: v.$c_accent-500;
        }
    }

    .details-sameProduct{
        .part_no,
        .product_name{
            color: white;
            background: v.$c_product_dark;
            border-color: v.$c_tone-400;
        }

        .part_no .content-highlight-wrapper{
            border-color: v.$c_accent-500;
        }
    }

}

// The table won't fit on a narrow screen, so arrange each <tr> into a three-row grid
@media screen and (max-width: 700px){
    #jobitems_table{
        // Make it stop behaving like a table
        width: 100%;
        margin: 0.3rem 0;

        thead tr { 
            position: absolute;
            top: -9999px;
            left: -9999px;
        }

        td{
            display: inline-block;
            padding: 0;
            border: none;
        }

        .content-highlight-wrapper{
            height: auto;
            padding: 0;
        }

        // Make it behave like a grid
        tbody tr{
            display: grid;
            grid-template-columns: repeat(4, auto) 1fr repeat(2, auto);
            grid-template-rows: 1.5rem 1.5rem 1.5rem;
            grid-template-areas: 
                "ji_id      qty         part_no     part_no         .               .           more_info"
                "prod_name  prod_name   prod_name   prod_name       prod_name       prod_name   prod_name"
                "mod-status mod-status  mod-status  selling_price   selling_price   price_list  price_list"
            ;

            min-width: 286px;
            width: 96%;
            max-width: 450px;

            margin: 0.5rem 0 0 0;
            padding: 0.3rem 0.2rem;

            border: 1px solid v.$c_tone-1000;
            box-shadow: 0 0 10px 1px rgba(black, 35%);
        }

        .ji_id{
            grid-area: ji_id;
        }
        .selling_price{
            grid-area: selling_price;
        }
        .price_list{
            grid-area: price_list;
        }
        .more_info{
            grid-area: more_info;
        }
        .product_name{
            grid-area: prod_name;
        }

        .quantity{
            grid-area: qty;
            
            // In the absence of a heading, append " x " to hint at the quantity-ness
            padding-left: 0.5rem;
            &::after{
                content: "x";
                padding: 0 0.4rem;
            }
        }

        .part_no{
            grid-area: part_no;

            // In the absence of a heading, add [...] and padding to separate it from the name
            padding-right: 0.2rem;
            .content-highlight-wrapper{
                &::before{
                    content: "[";
                }
                &::after{
                    content: "]";
                }
            }
        }

        .modular{
            grid-area: mod-status;

            // The status text needs a heading for context, so add one
            &::before{
                display: inline-block;
                content: "mod.";
                background: v.$c_tone-950;
                padding: 0.1rem 0.4rem 0.2rem 0.4rem;
                font-size: 0.9rem;
            }

            // In this <td>, the highlight is still wanted, so adjust accordingly
            .content-highlight-wrapper{
                display: inline-block;
                width: auto;
                height: auto;
                min-width: 3rem;
                padding: 0.1rem 0.5rem 0.2rem;
                font-size: 0.9rem;
            }

            // If it's not a modular item, just hide all this
            // (We want the <td> on wide-mode, so React can't just... not render it)
            &.not-modular{
                &::before,
                .content-highlight-wrapper{
                    position: absolute;
                    top: -9999px;
                    left: -9999px;
                }
            }
        }

        // Adjust the "details selection" formatting for the new grid-based reality
        &.details-visible{

            .details-active{
                // Add wider side-border and adjust padding to avoid content wiggling
                border-left: 3px solid v.$c_accent-500;
                padding-left: calc(0.2rem - 2px); 

                td.modular{
                    &::before{
                        color: white;
                    }
                }

                .ji_id .content-highlight-wrapper {
                    border-color: transparent;
                }

            }

            .details-slotFiller{
                // Add wider side-border and adjust padding to avoid content wiggling
                border-left: 3px solid v.$c_accent-500;
                padding-left: calc(0.2rem - 2px);

                // Apply colour to the entire row
                background: v.$c_tone-500;
    
                td{
                    color: white;
                    height: auto;
                    border-color: v.$c_tone-400;
                }
                
                .part_no .content-highlight-wrapper{
                    border-color: transparent;
                }
            }
        
            .details-sameProduct{
                // Add wider side-border and adjust padding to avoid content wiggling
                border-left: 3px solid v.$c_product_light;
                padding-left: calc(0.2rem - 2px);

                // Apply colour to the entire row
                background: v.$c_product_dark;
    
                td{
                    color: white;
                    border-color: v.$c_tone-400;
                }
                
                .part_no .content-highlight-wrapper{
                    border-color: transparent;
                }
            }
        }
    }
}


// || Price Check Section
.jobPriceCheck{
    &_contentsWrapper{
        grid-column: 2;
    }
}


.jobPriceCheckDetails {
    width: fit-content;
    max-width: 100%;
}

.jobPriceCheckComparison{
    margin-top: 1.5rem;
    width: fit-content;
    max-width: 100%;
}

.selling-price-container{
    position: relative;
}

.details-toggle{
    border-bottom: 1px dotted white;
}

.status-indicator{
    display: flex;
    width: 100%;
    margin: 0.5rem 0 0 0.5rem;
    font-size: 0.9rem;
    color: v.$c_tone-400;
    font-weight: bold;

    :first-child,
    :last-child{
        border: 1px solid v.$c_tone-500;
    }
    :first-child{
        border-top-left-radius: 0.2rem;
        border-bottom-left-radius: 0.2rem;
    }
    :last-child{
        border-top-right-radius: 0.95rem;
        border-bottom-right-radius: 0.95rem;  
    }

    .status-name{
        display: block;
        padding: 0.1rem 0.5rem 0.1rem 1rem;
        width: fit-content;
        color: white;
    }

    button{
        display: block;
        padding: 0.1rem 1rem 0.1rem 0.7rem;
        
        color: v.$c_tone-200;
        border: 1px solid v.$c_tone-500;
        border-left: 3px solid v.$c_tone-300;

        &.todo-list-toggle{
            background: v.$c_tone-950;
            &:hover{
                background: v.$c_tone-500;
            }
        }

        &#price_confirmation_button{
            background: transparent;

            &:hover{
                background: v.$c_tone-500;
            }
        }

    }

    &.on{
        button,
        button#price_confirmation_button{
            color: v.$c_good-500;
            border: 1px solid v.$c_good-600;
            border-left: 3px solid v.$c_good-500;

            min-width: 49px;    // <- this prevents "font-weight: bold" on hover from making the element "twitch" on to-do
            &:hover{
                background: v.$g_button_good;
                color: black;
                font-weight: bold;
            }
        }
    }
}


.priceCheckEditor{
    position: absolute;
    z-index: 2;
    left: -10px;

    background: v.$c_tone-800;
    min-width: 280px;

    text-align: left;

    &_description{
        margin: 0.5rem;
    }

    &_optionsContainer{
        border-top: 1px solid v.$c_tone-950;
    }

    &_optionsHeading{
        font-size: 0.95rem;
        font-weight: normal;
        width: 100%;
        margin: 0.5rem 0 0 0.5rem;
        padding-bottom: 0.2rem;
    }

    &_presetPriceButton{
        margin: 0.2rem 5% 0.2rem;
        padding: 0.4rem 0.3rem;
        width: 40%;

        background: v.$c_tone-1000;

        &:hover{
            background: v.$c_tone-950;
            color: v.$c_accent-300;
        }
    }

    &_customPrice{
        margin: 1rem 0 1rem 0.5rem;
    }
}


#price_check_table{
    .name-tag{
        margin: 0;
    }

    .ji_id{
        text-align: left;
    }
    .resale-percentage .name-tag::before{
        content: 'RD';
        padding-right: 0.3rem;
    }
    .selling-price{
        display: inline-block;
        margin-top: 0.25rem;
    }
    td{
        text-align: right;
    }
    .description{
        position: relative;
        cursor: help;
    }
    .details{
        display: block;
        font-style: italic;
        color: v.$c_tone-200;

        padding: 0.2rem 0.7rem;
        background: v.$c_tone-1000;
        border-radius: 0.3rem;

        text-align: center;

        position: absolute;
        z-index: 8;
        bottom: 1.5rem;
        left: 0;
        max-width: 10rem;
    }

    .temp-warning-msg{
        position: absolute;
        z-index: 3;
        right: 0;

        box-shadow: v.$shadow_popout;
        min-width: 12rem;
    }
}
@media screen and (max-width: 1098px){

    .jobPriceCheckDetails{
        width: v.px-to-rem(464);
    }

    #price_check_table{
        // Make it stop behaving like a table
        width: 100%;
        margin: 0.3rem 0;

        thead tr { 
            position: absolute;
            top: -9999px;
            left: -9999px;
        }

        td{
            display: inline-block;
            padding: 0;
            border: none;
            height: auto;
            text-align: left;
            vertical-align: middle;
        }

        .selling-price{
            margin: 0;
        }

        tbody tr{
            display: grid;
            grid-template-columns: repeat(4, auto) 1fr auto;
            grid-template-rows: repeat(7, auto);
            grid-template-areas: 
                "ji_id qty part_no part_no part_no part_no"
                "price price price price price price"
                "version      version       version     list-price  list-price  list-price"
                "list-dv      list-dv       list-dv     list-dv     list-dv     list-dp"
                "resale-perc  resale-perc   resale-perc resale-price resale-price resale-price"
                "resale-dv    resale-dv     resale-dv   resale-dv  resale-dv    resale-dp"
            ;

            width: 100%;

            margin: 0.5rem 0 0 0.1rem;
            padding: 0.3rem 0.2rem;

            border: 1px solid v.$c_tone-1000;
            box-shadow: 0 0 10px 1px rgba(black, 35%);
        }

        .ji_id{
            grid-area: ji_id;
            padding-left: 0.1rem;
        }
        .qty{
            grid-area: qty;
            
            // In the absence of a heading, append " x " to hint at the quantity-ness
            padding-left: 0.5rem;
            &::after{
                content: "x";
                padding: 0 0.4rem;
            }
        }
        .description{
            grid-area: part_no;

            .details{
                padding: 0.2rem 0.4rem;
                bottom: 1rem;
                max-width: 90%;
            }
        }

        .selling-price-container{
            grid-area: price;
            text-align: left;

            font-weight: bold;
            font-size: 1.1rem;
            padding: 0.3rem 0.3rem 0 0.3rem;

            &:before{
                display: inline-block;
                content: 'Sold for';
                padding-right: 1.4rem;
            }

            border-bottom: 1px solid v.$c_tone-500;
        }

        .version{
            grid-area: version;
            padding-top: 0.3rem;
        }
        .list-price{
            grid-area: list-price;
            padding: 0.4rem 0 0 0.7rem;
            color: v.$c_tone-300;
        }
        .list-diff-val{
            grid-area: list-dv;
            text-align: right;
            border-bottom: 1px solid v.$c_tone-500;
            padding: 0 0 0.4rem 0;
        }
        .list-diff-perc{
            grid-area: list-dp;
            padding: 0 0 0.4rem 0.5rem;
            border-bottom: 1px solid v.$c_tone-500;

            &::before{
                content: '(';
                display: inline-block;
                padding-left: 0.5rem;
            }
            &::after{
                content: ')';
                display: inline-block;
            }
        }

        .resale-percentage{
            grid-area: resale-perc;
            padding: 0.3rem 0 0 0;
        }
        .resale-price{
            grid-area: resale-price;
            padding: 0.3rem 0 0 0.7rem;
            color: v.$c_tone-200;
        }
        .resale-diff-val{
            grid-area: resale-dv;
            text-align: right;
        }
        .resale-diff-perc{
            grid-area: resale-dp;

            &::before{
                content: '(';
                display: inline-block;
                padding-left: 0.5rem;
            }
            &::after{
                content: ')';
                display: inline-block;
            }
        }
    }
}


// || Price Comparison Table
table.price-comparison{
    margin: 0.5rem;
    border-spacing: 0;

    th{
        text-align: right;
        padding: 0.1rem 0.3rem;
        border-right: 2px solid v.$c_tone-800;
    }
    td{
        padding: 0.3rem;
    }

    th, td{
        border-top: 1px solid v.$c_tone-800;
    }

    .diff-perc{
        font-size: 0.9rem;
        &:before{
            content: "(";
        }
        &:after{
            content: ")";
        } 
    }

    .number{
        text-align: right;
    }

    .conclusion{
        background: v.$c_tone-950;

        th{
            border-right: 2px solid v.$c_tone-500; 
        }

        th, td{
            border-top: 1px solid v.$c_tone-500;
        }
    }
}

@media screen and (max-width: 400px){
    table.price-comparison{
        margin: 0.2rem;
    }
}


// || Documents Section
.jobDocsOut{
    --widthJobDocsTable: #{v.px-to-rem(400)};

    &_contentWrapper{
        grid-column: 2;

        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: v.px-to-rem(32);

        margin: v.px-to-rem(16) 0 0 0;

        @media screen and (min-width: v.$breakpoint_permaShowJobNav){
           justify-content: start; 
        }
    }

    &_subsection{
        display: grid;
        grid-template-columns: 130px auto;
        grid-template-rows: auto auto auto;
        grid-template-areas: 
            "heading heading"
            "addBtn unassigned"
            "docsTable docsTable"
        ;
        column-gap: v.px-to-rem(8);
    
        min-width: min(calc((#{v.$MAX_WIDTH} - #{v.px-to-rem(8)}) / 2), 100%);
        width: fit-content;
        max-width: max(100%, v.$MAX_WIDTH);

        padding: 0 0 v.px-to-rem(6) 0;
        margin: 0;
    }

    &_emptySection{
        grid-area: docsTable;
        width: var(--widthJobDocsTable);
        max-width: 100%;

        margin: v.px-to-rem(8);
        align-self: start; 
    }

    &_subsectionHeading{
        grid-area: heading;
        align-self: start;
    }

    &_subsectionAddButton{
        grid-area: addBtn;

        display: flex;
        align-items: center;
        color: v.$c_txt_main;
        padding: 0;
        text-decoration: none;
        font-size: 1rem;

        &:hover{
            animation-name: expand_add_document;
        }
    }

    &_unassigned {
        &Wrapper{
            grid-area: unassigned;
            align-self: center;
            justify-self: end;
            margin-right: v.px-to-rem(4);

            display: block;
            background: v.$c_tone-950;
            border: 1px solid v.$c_tone-400;
        
            border-color: v.$c_accent-500;
        }

        &Msg{
            margin-right: 3px;
            display: inline-block;
            font-size: v.px-to-rem(12);
            padding: v.px-to-rem(4) v.px-to-rem(8);

            @media screen and (min-width: $breakpoint_docsCardsToTable){
                padding: 0.2rem 1rem;
            }
        }

        &Icon{
            display: inline-block;
            border-right: 1px solid transparent;
            width: v.px-to-rem(24);
            padding: 0.2rem 0.4rem;
            text-align: center;
            font-weight: bold;
        
            color: v.$c_tone-950;
            background: v.$c_accent-500;
        }
    }
}

@keyframes expand_add_document{
    from {
        width: 30px;
        text-indent: -9999px;
    }

    95%{
        text-indent: -9999px;
    }
    
    to {
        width: 8rem;
        text-indent: 44px;
    }
}


.documentsOutTable{
    grid-area: docsTable;
    margin: v.px-to-rem(18) v.px-to-rem(5) v.px-to-rem(2);
    border-collapse: collapse;

    th{
        padding: 0.1rem 0.5rem;
        border: 1px solid v.$c_tone-800;
        background: v.$c_tone-500;
    }

    &_referenceCol,
    &_dateCol,
    &_statusCol,
    &_editCol {
        border: 1px solid v.$c_tone-500;
        height: 2rem;
    }

    .edit-icon{
        position: relative;
        left: v.px-to-rem(1);
        border-bottom: 2px solid transparent;
    }
    .edit-icon:hover{
        border-color: white;
    }

    --widthDateCol: #{v.px-to-rem(92)};
    --widthStatusCol: #{v.px-to-rem(78)};
    --widthEditCol: #{v.px-to-rem(33)};

    width: var(--widthJobDocsTable);

    &_dateCol{
        min-width: var(--widthDateCol);
        width: var(--widthDateCol);
        max-width: var(--widthDateCol);
        padding: 0.1rem 0.5rem;
        white-space: nowrap;
    }

    &_statusCol{
        min-width: var(--widthStatusCol);
        width: var(--widthStatusCol);
        max-width: var(--widthStatusCol);
        padding: 0.1rem 0.5rem;

        position: relative;
        &:before{
            display: block;
            content: '';
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            width: 3px;
        }

        &-draft{
            background: v.$c_accent-900;

            &:before{
                background: v.$c_accent-500;
            }
        }
        &-issued{
            background: v.$c_good-900;

            &:before{
                background: v.$c_good-500;
            }
        }
        &-invalid{
            background: v.$c_tone-950;

            &:before{
                background: v.$c_warning;
            }
        }
    }

    &_editCol{
        min-width: var(--widthEditCol);
        width: var(--widthEditCol);
        max-width: var(--widthEditCol);
    }

    &_referenceCol{
        padding: 0.1rem 0.5rem;
        width: 50rem;
        max-width: calc(100% - var(--widthDateCol) - var(--widthStatusCol) - var(--widthEditCol));
    }

    &_status{
        display: flex;
        align-items: center;
        justify-content: center;

        height: 100%;
        width: 100%;
    }
}

/* 
NOTE: MAX-WIDTH used here, instead of min-width
-------------------------------------------------------------
On mobile, the <table> should not behave like a table, so 
many table-y defaults are adjusted to get it looking right. 
On desktop, the <table> should largely behave like a table,
so the table-y defaults are good.
If mobile were the "main" version of the CSS, many table defaults 
would need to be restored in the media query.
Seems more efficient to deviate from mobile-first in this case.
*/
@media screen and (max-width: calc(#{$breakpoint_docsCardsToTable} - 1px)){
    .documentsOutTable{   
        width: calc(100% - 0.6rem);
        max-width: 100%;

        thead tr{
            position: absolute;
            top: -9999px;
            left: -9999px;
        }
    
        &_referenceCol,
        &_dateCol,
        &_statusCol,
        &_editCol {
            display: inline-block;
            padding: 0.1rem 0.4rem;
            vertical-align: middle;
            height: auto;
            border: none;
        }

        tbody tr{
            display: grid;
            grid-template-columns: var(--widthDateCol) var(--widthStatusCol) minmax(0, 1fr)  var(--widthEditCol);
            grid-template-rows: auto min-content 1.5rem;
            grid-template-areas: 
                "ref ref ref ref"
                ". . . edit"
                "date status . edit"
            ;
            column-gap: v.px-to-rem(8);
    
            min-width: 268px;
            max-width: 100%;
    
            margin: 0.5rem 0 0 0;
            padding: 0.3rem 0.2rem;
    
            border: 1px solid v.$c_tone-1000;
            box-shadow: 0 0 10px 1px rgba(black, 35%);
        }

        .edit-icon{
            top: v.px-to-rem(4);
        }

        &_dateCol{
            grid-area: date;
            text-align: left;
        }
    
        &_statusCol{
            grid-area: status;
            text-align: left;

            &-draft{
                background: v.$c_accent-900;
            }
            &-issued{
                background: v.$c_good-900;
            }
        }
    
        &_editCol{
            grid-area: edit;
            text-align: left;
            align-self: end;
        }
    
        &_referenceCol{
            grid-area: ref;
            text-align: left;

            display: flex;
            align-items: end;
            
            max-width: 100%;

            overflow: hidden;
        }
    
        &_status{
            position: relative;
            left: calc(-0.5rem + 2px);
    
            display: flex;
            align-items: center;
            justify-content: start;
    
            height: 100%;
            width: 100%;
    
            padding: 0.1rem 0.5rem;
            border-left: 3px solid transparent;
    
            &-draft{
                border-color:v.$c_accent_500;
            }
            &-issued{
                border-color: v.$c_good-500;
            }
        } 
    }
}


// || Modals
.jobItemsCreator{
    width: 100%;

    &_form{
        display: flex;
        flex-direction: column;
        gap: v.px-to-rem(8);

        width: 100%;
        max-width: 100%;
    }

    &_submit{
        height: auto;
        width: 40%;
        padding: 0.5rem 0.5rem;
        align-self: start;
        vertical-align: middle;
        font-size: v.px-to-rem(18);
    }
}

.commentEditor{
    &_form{
        display: flex;
        flex-direction: column;
        gap: v.px-to-rem(16);
        padding: v.px-to-rem(8) 0 0;

        width: 75ch;
        max-width: 100%;
    }

    &_editText{
        height: 50vh;
        min-height: 6rem;
        width: 100%;
    }

    &_checkboxesContainer{
        background: v.$c_tone-950;
        border: 1px solid v.$c_tone-1000;
        border-radius: 3px;
        
        margin: 0.3rem 0 0 0;
        padding: 0 v.px-to-rem(6);
        width: 100%;
        font-size: v.px-to-rem(14);
        line-height: 1;

        display: flex;
        flex-direction: row;
        align-items: flex-start;
        gap: v.px-to-rem(14);
    }
}
@media screen and (min-aspect-ratio: 1/1){
    .commentEditor{
        &_editText{
            height: 20vh;
        }
    }
}